:root { /*root info for whole page*/
    --primary-color: #ffffff;
    --secondary-color: rgb(189, 95, 189);
    --bg-color: #232831 ;
}

* { /*whole page properties (margin, padding and box sizing = standard)*/
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'inter', sans-serif;
    transition-duration: 200ms; /*time after hover for transition*/
}

body {
    background: var(--bg-color); /*VAR() to prefered color*/
    color: var(--primary-color); /*VAR() to prefered color*/
    min-height: 100vh; /*Vh= viewer height*/
    display: flex;
    flex-direction: column; /*flex vertical format (default horizontal)*/
    gap: 72x; /*pixel gap between header and body*/
    padding: 14px; /*pixels away from border of page*/ 
}

.darkerText { /*Class = grouping for styling*/
    color: var(--secondary-color);
}

header, main, footer { /*multiple sections with same properties*/
    max-width: 800px; /*perameter for maximum size when increasing page size*/
    margin: 0 auto;
    width: 100%; /*maximum width of page*/
}

p { /*paragraph parameters*/
    font-size: 1.05em;
}

header { /*header parameters*/
    display: flex; /*makes items in row*/
    align-items: center; /*centers row vertically*/
    justify-content: space-between; /*spaces out row*/
    gap: 14px;
    padding-bottom: 72px; /*pixel gap under hearder*/
}

nav { /*nav parameters*/
    color: var(--secondary-color);
    display: flex; /*makes items in row*/
    align-items: center; /*vertical centre along header row*/
    gap: 32px; /*gap between nav anchors*/
}

nav a { /*mav anchor parameters*/
    cursor: pointer; /*cursor becomes pointer on hover*/
    text-decoration: none; /*remove default underline*/
}

nav a:hover { /*nav anchor hover perameters*/
    opacity: 0.7; /*reduce opacity when hover*/
    text-decoration: underline; /*underline when hover*/
}

main, section, .nameContainer { 
    display: flex; /*makes items in row*/
    flex-direction: column;
}

Main {
    gap: 64px;
    padding-bottom: 64px; /*padding at bottom of page*/
}

section {
    gap:48px; /*Formats standard gap for each section*/
}

.statsContainer { /*Class = grouping for styling*/
    display: flex; /*makes items in row of profile picture*/
    flex-direction: column;/*forces icons below profile pic when screen size reduced*/
    align-items: stretch;
    gap: 32px; /*gap between profile picture and icons*/
}

.imgContainer img { /*Class = grouping for styling, specific img inside group*/
    border-radius: 100%; /*rounding of profile pic*/
    max-width: 120px; /*max size of profile pic*/
}

.stats { /*Class = grouping for styling*/
    display: flex; /*makes items in row alongside imgContainer*/
    flex-direction: column; /*formats into column*/
    padding-top: 8px; /*specify pizel padding to top*/
}

.stats div { /*Class = grouping for styling, specific div in class*/
    flex: 1;
    display: flex; /*row format of icons to description*/
    gap: 8px; /*horizontal gap betweem icon and description*/
}

.stats div i { /*Class = grouping for styling of icon in division*/
    font-size: 1.4em;
}

.aboutMe { /*paragraph parameters*/
    line-height: 1.5em;/*formats paragraph line heightw*/
    width: 100%; /*formats 100% page width to maximum pizel width*/
}

.outreach { /*Class = grouping for styling*/
    display: flex; /*makes items in row of outreach icon*/
    align-items: center; /*makes items center in row*/
    gap: 14px; /*gap between icon and ANCHOR link*/
    cursor: pointer;
    width: fit-content; /*formats cursor conversion to only when over link, not entire row*/
}

.outreach:hover { /*Class = grouping for styling whilst hover*/
    opacity: 0.7;
}

.outreach i { /*Class = grouping for styling of icon*/
    transform: rotate(-45deg); /*transform 45 degrees rotation of icon*/
}

.projectContainer { /*Class = grouping for styling*/
    display: flex; /*makes items in row*/
    flex-direction: column;
    gap: 24px;
}

.projectItem { /*Class = grouping for styling*/
    display: flex; /*makes items in row*/
    align-items: stretch;
    gap: 24px; /*gap between thumbnail and projectparagraph*/
}

.projectItem div:first-child { /*Class = grouping for styling, specified first child of division*/
    display: flex; /*makes items in row*/
    flex-direction: column;
    gap: 14px;
}
.headerText { /*Class = grouping for styling*/
    margin-bottom: 24px; /*pzel spacing below section title*/
}

.projectItem>div:last-child { /*Class = grouping for styling specifies last child of div (thumbnail)*/
    aspect-ratio: 16/9; /*thumbnail ratio*/
    max-width: 30%; /*maximum width of screen percentage*/
    overflow: hidden;
    border-radius: 8px; /*rounding of thumbnail*/
}

.projectItem>div:last-child img { /*Class = grouping for styling specifies img (thunmbnail of last child division*/
    width: 100%; /*img total size in division*/
    height: 100%; /*img total size in division*/
}

.linkContainer { /*Class = grouping for styling*/
    display: flex; /*makes items in row*/
    align-items: center;
    gap: 24px;
}

.linkItem { /*Class = grouping for styling*/
    display: flex; /*makes items in row*/
    flex-direction: row !important; /*!important prioriteses row format of icon and link */
    align-items: center;
    gap: 8px !important; /*Specifies gap between icon and link*/
    color: var(--primary-color);
    text-decoration: none; /*removes underline*/
}

.linkItem:hover { /*Class = grouping for styling during hover*/
    opacity: 0.7;
    cursor: pointer;
}

.linkItem p { /*Class = grouping for styling specific to paragraph*/
    font-size: 0.9em;
}

.CodeCampText {
    margin-top: -30px;
    margin-bottom: -40px;
}

@media (min-width: 640px) { /*@MEDIA to adjust for phonescreen when scaling page.*/
    .statsContainer {
        flex-direction: row; /*changes format to row when below 640px*/
    }
    .stats {
        gap: 0px;
    }
}

@media (max-width: 500px) {
    .projectItem{
        display: flex;
        flex-wrap: wrap;
    }
    .projectImgContainer {
        min-width: 250px;
        margin: auto;
    }
}

@media (max-width: 760px) {
    .projectItem{
        display: flex;
        flex-wrap: wrap;
    }
    .projectImgContainer {
        min-width: 250px;
    }
}

@media (max-width: 760px) {
    nav {
        flex-wrap: wrap;
        justify-content: right;
        gap: 16px;
    }
}
